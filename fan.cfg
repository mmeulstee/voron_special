[heater_fan hotend_fan]
pin: PD13 #PE5
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA8
cycle_time: 0.0001    #10 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
off_below: 0.05

[heater_fan controller_fan]
pin: PD12
max_power: 1.0
shutdown_speed: 1.0
cycle_time: 0.0001     #10 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
fan_speed: 0.9
heater: heater_bed
heater_temp: 65.0

[temperature_fan chamber]
pin: PD15
max_power: 1.0
shutdown_speed: 0.0
cycle_time:0.0005		#2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 70
target_temp: 0
max_speed: 1.0
min_speed: 0.1
target_temp: 0.0
control: watermark
gcode_id: C

[fan_generic filter]
pin: PD14
max_power: 1
kick_start_time: 0.5
off_below: 0.10

[output_pin lock_M106]
pin: rpi: gpio16
value:0

[temperature_sensor RPi_Zero]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

[temperature_sensor octopus_mcu]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
gcode_id: OT
#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
[gcode_macro M141]
description: Set temperature of chamber fan
gcode:
  SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}
    
[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode:
  SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}

[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode:
  _SET_FILTER S={printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val}
  
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}

##  Chamber Ventilation Control in Mainsail
[gcode_macro VENT]
description: Toggle Chamber fan
gcode:
    {% if printer['temperature_fan chamber'].target|float > 0 and 
          printer['temperature_fan chamber'].target|float <= printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val|float %}
        M141
    {% else %}
        M141 S{printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val}
    {% endif %}
    _VENT_INFO

[delayed_gcode _DELAY_VENT_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    M141
    _VENT_INFO
  {% endif %}

[gcode_macro _VENT_INFO]
description: Helper: Print chamber fan temperature
gcode:
  {% set txt = "off" if printer['temperature_fan chamber'].target == 0 
          else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
  {action_respond_info("Chamber fan %s" % txt)}
    
[gcode_macro _FILTER_INFO]
description: Helper: Print Nevermore speed
gcode: {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic filter'].speed|float > 0.0 else 'off')}